{"version":3,"sources":["components/Checkout/index.js","App.js","serviceWorker.js","index.js"],"names":["Checkout","renderProducts","useMemo","class","src","alt","type","value","renderSummary","Fragment","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6OA8IeA,G,UA5IE,WAEf,IAAMC,EAAiBC,mBAAQ,kBAC7B,6BAASC,MAAM,YACb,wBAAIA,MAAM,QAAV,iBACA,wBAAIA,MAAM,2BACR,wBAAIA,MAAM,2BACR,yBAAKA,MAAM,eAAX,mBACA,yBAAKA,MAAM,gBAAX,YACA,yBAAKA,MAAM,aAAX,SACA,yBAAKA,MAAM,aAAX,WAGJ,wBAAIA,MAAM,iBACR,wBAAIA,MAAM,eACR,yBAAKA,MAAM,eACT,4BAAQA,MAAM,iBACZ,yBAAKC,IAAI,gBAAgBC,IAAI,UAC7B,yBAAKF,MAAM,uBACT,qCACA,uBAAGA,MAAM,gBAAT,2BAIN,yBAAKA,MAAM,gBACT,4BAAQA,MAAM,SAAd,KACC,2BAAOG,KAAK,OAAOH,MAAM,mBAAmBI,MAAM,MAAM,4BACvDJ,MAAM,SADiD,MAM3D,yBAAKA,MAAM,aACT,0BAAMA,MAAM,iBAAZ,MACC,0BAAMA,MAAM,6BAAZ,WAEH,yBAAKA,MAAM,aACT,0BAAMA,MAAM,iBAAZ,MACC,0BAAMA,MAAM,6BAAZ,YAGL,wBAAIA,MAAM,eACR,yBAAKA,MAAM,eACT,4BAAQA,MAAM,iBACZ,yBAAKC,IAAI,cAAcC,IAAI,QAC3B,yBAAKF,MAAM,uBACT,mCACA,uBAAGA,MAAM,gBAAT,2BAIN,yBAAKA,MAAM,gBACT,4BAAQA,MAAM,SAAd,KACC,2BAAOG,KAAK,OAAOH,MAAM,mBAAmBI,MAAM,MAAM,4BACvDJ,MAAM,SADiD,MAM3D,yBAAKA,MAAM,aACT,0BAAMA,MAAM,iBAAZ,KACC,0BAAMA,MAAM,6BAAZ,WAEH,yBAAKA,MAAM,aACT,0BAAMA,MAAM,iBAAZ,MACC,0BAAMA,MAAM,6BAAZ,YAGL,wBAAIA,MAAM,eACR,yBAAKA,MAAM,eACT,4BAAQA,MAAM,iBACZ,yBAAKC,IAAI,cAAcC,IAAI,QAC3B,yBAAKF,MAAM,uBACT,mCACA,uBAAGA,MAAM,gBAAT,2BAIN,yBAAKA,MAAM,gBACT,4BAAQA,MAAM,SAAd,KACC,2BAAOG,KAAK,OAAOH,MAAM,mBAAmBI,MAAM,MAAM,4BACvDJ,MAAM,SADiD,MAM3D,yBAAKA,MAAM,aACT,0BAAMA,MAAM,iBAAZ,MACC,0BAAMA,MAAM,6BAAZ,WAEH,yBAAKA,MAAM,aACT,0BAAMA,MAAM,iBAAZ,MACC,0BAAMA,MAAM,6BAAZ,gBAKT,IAEIK,EAAgBN,mBAAQ,kBAC5B,2BAAOC,MAAM,WACX,wBAAIA,MAAM,QAAV,iBACA,wBAAIA,MAAM,gCACR,4BACE,0BAAMA,MAAM,wBAAZ,YACC,0BAAMA,MAAM,uBAAZ,MACK,0BAAMA,MAAM,YAAZ,aAIV,yBAAKA,MAAM,yCACT,yCACA,4BACE,4BAAI,+CAA0B,4CAC9B,4BAAI,gDAA2B,2CAC/B,4BAAI,4CAAuB,4CAG/B,yBAAKA,MAAM,yBACT,4BACE,4BACE,0BAAMA,MAAM,sBAAZ,cACC,0BAAMA,MAAM,uBAAZ,eAGL,4BAAQG,KAAK,UAAb,gBAGJ,IASF,OAPuBJ,mBAAQ,kBAC7B,kBAAC,IAAMO,SAAP,KACGR,EACAO,KAEH,CAACP,EAAgBO,MC7HNE,MARf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,QCKcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.dea79bef.chunk.js","sourcesContent":["import React, {useMemo} from 'react'\n\nconst Checkout = () => {\n\n  const renderProducts = useMemo(() => (\n    <section class=\"products\">\n      <h1 class=\"main\">Shopping cart</h1>\n      <ul class=\"products-list tableHead\">\n        <li class=\"products-list-title row\">\n          <div class=\"col-product\">Product details</div>\n          <div class=\"col-quantity\">Quantity</div>\n          <div class=\"col-price\">Price</div>\n          <div class=\"col-total\">Total</div>\n        </li>\n      </ul>\n      <ul class=\"products-list\">\n        <li class=\"product row\">\n          <div class=\"col-product\">\n            <figure class=\"product-image\">\n              <img src=\"img/shirt.png\" alt=\"Shirt\" />\n              <div class=\"product-description\">\n                <h1>Shirt</h1>\n                <p class=\"product-code\">Product code X7R2OPX</p>\n              </div>\n            </figure>\n          </div>\n          <div class=\"col-quantity\">\n            <button class=\"count\">-</button\n            ><input type=\"text\" class=\"product-quantity\" value=\"3\" /><button\n              class=\"count\"\n            >\n              +\n            </button>\n          </div>\n          <div class=\"col-price\">\n            <span class=\"product-price\">20</span\n            ><span class=\"product-currency currency\">€</span>\n          </div>\n          <div class=\"col-total\">\n            <span class=\"product-price\">60</span\n            ><span class=\"product-currency currency\">€</span>\n          </div>\n        </li>\n        <li class=\"product row\">\n          <div class=\"col-product\">\n            <figure class=\"product-image\">\n              <img src=\"img/mug.png\" alt=\"Mug\" />\n              <div class=\"product-description\">\n                <h1>Mug</h1>\n                <p class=\"product-code\">Product code X2G2OPZ</p>\n              </div>\n            </figure>\n          </div>\n          <div class=\"col-quantity\">\n            <button class=\"count\">-</button\n            ><input type=\"text\" class=\"product-quantity\" value=\"4\" /><button\n              class=\"count\"\n            >\n              +\n            </button>\n          </div>\n          <div class=\"col-price\">\n            <span class=\"product-price\">5</span\n            ><span class=\"product-currency currency\">€</span>\n          </div>\n          <div class=\"col-total\">\n            <span class=\"product-price\">20</span\n            ><span class=\"product-currency currency\">€</span>\n          </div>\n        </li>\n        <li class=\"product row\">\n          <div class=\"col-product\">\n            <figure class=\"product-image\">\n              <img src=\"img/cap.png\" alt=\"Cap\" />\n              <div class=\"product-description\">\n                <h1>Cap</h1>\n                <p class=\"product-code\">Product code X3W2OPY</p>\n              </div>\n            </figure>\n          </div>\n          <div class=\"col-quantity\">\n            <button class=\"count\">-</button\n            ><input type=\"text\" class=\"product-quantity\" value=\"4\" /><button\n              class=\"count\"\n            >\n              +\n            </button>\n          </div>\n          <div class=\"col-price\">\n            <span class=\"product-price\">10</span\n            ><span class=\"product-currency currency\">€</span>\n          </div>\n          <div class=\"col-total\">\n            <span class=\"product-price\">40</span\n            ><span class=\"product-currency currency\">€</span>\n          </div>\n        </li>\n      </ul>\n    </section>\n  ),[])\n\n  const renderSummary = useMemo(() => (\n    <aside class=\"summary\">\n      <h1 class=\"main\">Order Summary</h1>\n      <ul class=\"summary-items wrapper border\">\n        <li>\n          <span class=\"summary-items-number\">11 Items</span\n          ><span class=\"summary-items-price\"\n            >120<span class=\"currency\">€</span></span\n          >\n        </li>\n      </ul>\n      <div class=\"summary-discounts wrapper-half border\">\n        <h2>Discounts</h2>\n        <ul>\n          <li><span>2x1 Mug offer</span><span>-10€</span></li>\n          <li><span>x3 Shirt offer</span><span>-3€</span></li>\n          <li><span>Promo code</span><span>0€</span></li>\n        </ul>\n      </div>\n      <div class=\"summary-total wrapper\">\n        <ul>\n          <li>\n            <span class=\"summary-total-cost\">Total cost</span\n            ><span class=\"summary-total-price\">107€</span>\n          </li>\n        </ul>\n        <button type=\"submit\">Checkout</button>\n      </div>\n    </aside>\n  ),[])\n\n  const renderCheckout = useMemo(() => (\n    <React.Fragment>\n      {renderProducts}\n      {renderSummary}\n    </React.Fragment>\n  ),[renderProducts, renderSummary])\n\n  return renderCheckout\n}\n\nexport default Checkout\n","import React from 'react';\nimport './App.css';\nimport Checkout from './components/Checkout'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Checkout/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}