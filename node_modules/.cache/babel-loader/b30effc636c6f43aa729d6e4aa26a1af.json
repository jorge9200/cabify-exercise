{"ast":null,"code":"var _jsxFileName = \"/Users/jorge/projects/exercises/cabify-exercise/src/containers/Store/index.js\";\nimport React, { useMemo, useState } from 'react';\nimport ProductList from '../../components/ProductList';\nimport Summary from '../../components/Summary';\nimport ItemDetail from '../../components/ItemDetail';\n\nconst Store = ({\n  products,\n  cart,\n  cartDiscounts,\n  updateCart,\n  totalPrice,\n  total\n}) => {\n  const [itemSelected, setItemSelected] = useState(null); // True if have discounts, false if not\n\n  const withDiscounts = useMemo(() => cartDiscounts.filter(discount => discount.totalDiscounted && discount.totalDiscounted > 0).length > 0, [cartDiscounts]); // Number of cart items\n\n  const nCartItems = useMemo(() => {\n    let numberOfItems = 0;\n    Object.entries(cart).forEach(([key, value]) => numberOfItems += value.quantity);\n    return numberOfItems;\n  }, [cart]); // Render Store\n\n  const renderCheckout = useMemo(() => React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ProductList, {\n    products: products,\n    cart: cart,\n    updateCart: updateCart,\n    setItemSelected: setItemSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Summary, {\n    nCartItems: nCartItems,\n    totalPrice: totalPrice,\n    withDiscounts: withDiscounts,\n    cartDiscounts: cartDiscounts,\n    total: total,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), [cart, cartDiscounts, nCartItems, products, total, totalPrice, updateCart, withDiscounts]);\n  const renderItemDetail = useMemo(() => React.createElement(ItemDetail, {\n    item: itemSelected,\n    setItem: setItemSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), [itemSelected]);\n  return itemSelected ? renderItemDetail : renderCheckout;\n};\n\nexport default Store;","map":{"version":3,"sources":["/Users/jorge/projects/exercises/cabify-exercise/src/containers/Store/index.js"],"names":["React","useMemo","useState","ProductList","Summary","ItemDetail","Store","products","cart","cartDiscounts","updateCart","totalPrice","total","itemSelected","setItemSelected","withDiscounts","filter","discount","totalDiscounted","length","nCartItems","numberOfItems","Object","entries","forEach","key","value","quantity","renderCheckout","renderItemDetail"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,OAAf,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,QADa;AAEbC,EAAAA,IAFa;AAGbC,EAAAA,aAHa;AAIbC,EAAAA,UAJa;AAKbC,EAAAA,UALa;AAMbC,EAAAA;AANa,CAAD,KAOR;AAEJ,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,IAAD,CAAhD,CAFI,CAIJ;;AACA,QAAMa,aAAa,GAAGd,OAAO,CAAC,MAC5BQ,aAAa,CAACO,MAAd,CAAqBC,QAAQ,IAAIA,QAAQ,CAACC,eAAT,IAA4BD,QAAQ,CAACC,eAAT,GAA2B,CAAxF,EAA2FC,MAA3F,GAAoG,CADzE,EAE3B,CAACV,aAAD,CAF2B,CAA7B,CALI,CASJ;;AACA,QAAMW,UAAU,GAAGnB,OAAO,CAAC,MAAM;AAC/B,QAAIoB,aAAa,GAAG,CAApB;AACAC,IAAAA,MAAM,CAACC,OAAP,CAAef,IAAf,EAAqBgB,OAArB,CAA6B,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkBL,aAAa,IAAIK,KAAK,CAACC,QAAtE;AACA,WAAON,aAAP;AACD,GAJyB,EAIxB,CAACb,IAAD,CAJwB,CAA1B,CAVI,CAgBJ;;AACA,QAAMoB,cAAc,GAAG3B,OAAO,CAAC,MAC7B,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEM,QADZ;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,UAAU,EAAEE,UAHd;AAIE,IAAA,eAAe,EAAEI,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,OAAD;AACE,IAAA,UAAU,EAAEM,UADd;AAEE,IAAA,UAAU,EAAET,UAFd;AAGE,IAAA,aAAa,EAAEI,aAHjB;AAIE,IAAA,aAAa,EAAEN,aAJjB;AAKE,IAAA,KAAK,EAAEG,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAD4B,EAgB5B,CAACJ,IAAD,EAAOC,aAAP,EAAsBW,UAAtB,EAAkCb,QAAlC,EAA4CK,KAA5C,EAAmDD,UAAnD,EAA+DD,UAA/D,EAA2EK,aAA3E,CAhB4B,CAA9B;AAkBA,QAAMc,gBAAgB,GAAG5B,OAAO,CAAC,MAC/B,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEY,YADR;AAEE,IAAA,OAAO,EAAEC,eAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD8B,EAK9B,CAACD,YAAD,CAL8B,CAAhC;AAOA,SAAOA,YAAY,GAAGgB,gBAAH,GAAsBD,cAAzC;AACD,CAlDD;;AAoDA,eAAetB,KAAf","sourcesContent":["import React, {useMemo, useState} from 'react'\nimport ProductList from '../../components/ProductList'\nimport Summary from '../../components/Summary'\nimport ItemDetail from '../../components/ItemDetail'\n\nconst Store = ({\n  products,\n  cart,\n  cartDiscounts,\n  updateCart,\n  totalPrice,\n  total,\n}) => {\n\n  const [itemSelected, setItemSelected] = useState(null)\n\n  // True if have discounts, false if not\n  const withDiscounts = useMemo(() => (\n    cartDiscounts.filter(discount => discount.totalDiscounted && discount.totalDiscounted > 0).length > 0\n  ),[cartDiscounts])\n\n  // Number of cart items\n  const nCartItems = useMemo(() => {\n    let numberOfItems = 0\n    Object.entries(cart).forEach(([key, value]) => numberOfItems += value.quantity)\n    return numberOfItems\n  },[cart])\n\n  // Render Store\n  const renderCheckout = useMemo(() => (\n    <React.Fragment>\n      <ProductList\n        products={products}\n        cart={cart}\n        updateCart={updateCart}\n        setItemSelected={setItemSelected}\n      />\n      <Summary\n        nCartItems={nCartItems}\n        totalPrice={totalPrice}\n        withDiscounts={withDiscounts}\n        cartDiscounts={cartDiscounts}\n        total={total}\n      />\n    </React.Fragment>\n  ),[cart, cartDiscounts, nCartItems, products, total, totalPrice, updateCart, withDiscounts])\n\n  const renderItemDetail = useMemo(() => (\n    <ItemDetail\n      item={itemSelected}\n      setItem={setItemSelected}\n    />\n  ),[itemSelected])\n\n  return itemSelected ? renderItemDetail : renderCheckout\n}\n\nexport default Store\n"]},"metadata":{},"sourceType":"module"}