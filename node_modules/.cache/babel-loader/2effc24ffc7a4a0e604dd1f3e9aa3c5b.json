{"ast":null,"code":"var _jsxFileName = \"/Users/jorge/projects/exercises/cabify-exercise/src/components/ProductList/index.js\";\nimport React from 'react';\n\nconst ProductList = ({\n  products,\n  cart,\n  updateCart,\n  setItemSelected\n}) => React.createElement(\"section\", {\n  className: \"products\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  className: \"main\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, \"Shopping cart\"), React.createElement(\"ul\", {\n  className: \"products-list tableHead\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(\"li\", {\n  className: \"products-list-title row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"col-product\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"Product details\"), React.createElement(\"div\", {\n  className: \"col-quantity\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, \"Quantity\"), React.createElement(\"div\", {\n  className: \"col-price\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"Price\"), React.createElement(\"div\", {\n  className: \"col-total\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Total\"))), React.createElement(\"ul\", {\n  className: \"products-list\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, !products || products.length <= 0 ? console.log('TODO: Empty state') : products.map(product => React.createElement(\"li\", {\n  key: product.id,\n  className: \"product row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"col-product\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, React.createElement(\"figure\", {\n  className: \"product-image\",\n  onClick: () => setItemSelected(product),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: `/assets/productAvatars/${product.img}.png`,\n  alt: product.name,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  className: \"product-description\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, product.name), React.createElement(\"p\", {\n  className: \"product-code\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, `Product code ${product.code}`)))), React.createElement(\"div\", {\n  className: \"col-quantity\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(\"button\", {\n  className: \"count\",\n  onClick: () => updateCart(product.id, --cart[product.id].quantity),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, \"-\"), React.createElement(\"input\", {\n  type: \"text\",\n  className: \"product-quantity\",\n  value: cart[product.id].quantity,\n  onChange: e => updateCart(product.id, e.target.value),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), React.createElement(\"button\", {\n  className: \"count\",\n  onClick: () => updateCart(product.id, ++cart[product.id].quantity),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, \"+\")), React.createElement(\"div\", {\n  className: \"col-price\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  className: \"product-price\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}, product.price), React.createElement(\"span\", {\n  className: \"product-currency currency\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}, \"\\u20AC\")), React.createElement(\"div\", {\n  className: \"col-total\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, React.createElement(\"span\", {\n  className: \"product-price\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, cart[product.id].totalPrice), React.createElement(\"span\", {\n  className: \"product-currency currency\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, \"\\u20AC\"))))));\n\nexport default ProductList;","map":{"version":3,"sources":["/Users/jorge/projects/exercises/cabify-exercise/src/components/ProductList/index.js"],"names":["React","ProductList","products","cart","updateCart","setItemSelected","length","console","log","map","product","id","img","name","code","quantity","e","target","value","price","totalPrice"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst ProductList = ({\n  products,\n  cart,\n  updateCart,\n  setItemSelected,\n}) => (\n  <section className=\"products\">\n    <h1 className=\"main\">Shopping cart</h1>\n    <ul className=\"products-list tableHead\">\n      <li className=\"products-list-title row\">\n        <div className=\"col-product\">Product details</div>\n        <div className=\"col-quantity\">Quantity</div>\n        <div className=\"col-price\">Price</div>\n        <div className=\"col-total\">Total</div>\n      </li>\n    </ul>\n    <ul className=\"products-list\">\n      { !products || products.length <= 0 ? console.log('TODO: Empty state') :\n        products.map(product => (\n          <li key={product.id} className='product row'>\n            <div className=\"col-product\">\n              <figure className=\"product-image\" onClick={() => setItemSelected(product)}>\n                <img src={`/assets/productAvatars/${product.img}.png`} alt={product.name} />\n                <div className=\"product-description\">\n                  <h1>{product.name}</h1>\n                  <p className=\"product-code\">{`Product code ${product.code}`}</p>\n                </div>\n              </figure>\n            </div>\n            <div className=\"col-quantity\">\n              <button\n                className=\"count\"\n                onClick={() => updateCart(product.id, --cart[product.id].quantity)}\n              >-</button>\n              <input\n                type=\"text\"\n                className=\"product-quantity\"\n                value={cart[product.id].quantity}\n                onChange={(e) => updateCart(product.id, e.target.value)}\n              />\n              <button\n                className=\"count\"\n                onClick={() => updateCart(product.id, ++cart[product.id].quantity)}\n              >+</button>\n            </div>\n            <div className=\"col-price\">\n              <span className=\"product-price\">{product.price}</span\n              ><span className=\"product-currency currency\">€</span>\n            </div>\n            <div className=\"col-total\">\n              <span className=\"product-price\">{cart[product.id].totalPrice}</span\n              ><span className=\"product-currency currency\">€</span>\n            </div>\n          </li>\n        ))\n      }\n    </ul>\n  </section>\n)\n\nexport default ProductList\n"]},"metadata":{},"sourceType":"module"}